{
	"contexts": {
		"sysmat": {
			"mappings": {
				"dispatcherServlets": {
					"dispatcherServlet": [
						{
							"handler": "Actuator web endpoint 'caches-cache'",
							"predicate": "{GET /actuator/caches/{cache}, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/caches/{cache}"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'caches'",
							"predicate": "{GET /actuator/caches, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/caches"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'caches-cache'",
							"predicate": "{DELETE /actuator/caches/{cache}, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/actuator/caches/{cache}"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'caches'",
							"predicate": "{DELETE /actuator/caches}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/actuator/caches"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'health'",
							"predicate": "{GET /actuator/health, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/health"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'health-path'",
							"predicate": "{GET /actuator/health/**, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/health/**"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'info'",
							"predicate": "{GET /actuator/info, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/info"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'conditions'",
							"predicate": "{GET /actuator/conditions, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/conditions"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'metrics-requiredMetricName'",
							"predicate": "{GET /actuator/metrics/{requiredMetricName}, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/metrics/{requiredMetricName}"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'metrics'",
							"predicate": "{GET /actuator/metrics, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/metrics"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator web endpoint 'mappings'",
							"predicate": "{GET /actuator/mappings, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
									"name": "handle",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator/mappings"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "Actuator root web endpoint",
							"predicate": "{GET /actuator, produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.WebMvcLinksHandler",
									"name": "links",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Map;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/actuator"
									],
									"produces": [
										{
											"mediaType": "application/vnd.spring-boot.actuator.v3+json",
											"negated": false
										},
										{
											"mediaType": "application/vnd.spring-boot.actuator.v2+json",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.AuthServerController#processLogout(UserLogoutRepresentation, Authentication, String)",
							"predicate": "{POST /sysmat_auth/logout_all, consumes [text/plain || application/json], produces [text/plain || application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.AuthServerController",
									"name": "processLogout",
									"descriptor": "(Lbr/com/connemat/sysmat/model/rest/UserLogoutRepresentation;Lorg/springframework/security/core/Authentication;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "text/plain",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat_auth/logout_all"
									],
									"produces": [
										{
											"mediaType": "text/plain",
											"negated": false
										},
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.ClientRealmController#getSelf()",
							"predicate": "{GET /sysmat/client/self}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.ClientRealmController",
									"name": "getSelf",
									"descriptor": "()Lbr/com/connemat/rest/model/ClientEntitySecretRepresentation;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/sysmat/client/self"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.GroupController#getGroups()",
							"predicate": "{GET /groups}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.GroupController",
									"name": "getGroups",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/groups"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.GroupController#getWorkspaceGroups()",
							"predicate": "{GET /groups/workspaces}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.GroupController",
									"name": "getWorkspaceGroups",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/groups/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.ItemMasterController#listItems()",
							"predicate": "{GET /item}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.ItemMasterController",
									"name": "listItems",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/item"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.sysmat.controller.ItemMasterController#listPagina(Integer)",
							"predicate": "{GET /item/{size}}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.sysmat.controller.BaseController",
									"name": "listPagina",
									"descriptor": "(Ljava/lang/Integer;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/item/{size}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.DataSourceConfigController#getDataSources()",
							"predicate": "{GET /datasource}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.DataSourceConfigController",
									"name": "getDataSources",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/datasource"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.InstanceController#deleteInstance(Instance)",
							"predicate": "{DELETE /sysmat/instance, consumes [application/json], produces [application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.InstanceController",
									"name": "deleteInstance",
									"descriptor": "(Lbr/com/connemat/model/config/Instance;)V"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/sysmat/instance"
									],
									"produces": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.InstanceController#addInstance(Instance)",
							"predicate": "{POST /sysmat/instance, consumes [application/json], produces [application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.InstanceController",
									"name": "addInstance",
									"descriptor": "(Lbr/com/connemat/model/config/Instance;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat/instance"
									],
									"produces": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.InstanceController#getInstances()",
							"predicate": "{GET /sysmat/instance, consumes [application/json], produces [application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.InstanceController",
									"name": "getInstances",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/sysmat/instance"
									],
									"produces": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.InstanceController#updatedInstance(Instance)",
							"predicate": "{PUT /sysmat/instance, consumes [application/json], produces [application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.InstanceController",
									"name": "updatedInstance",
									"descriptor": "(Lbr/com/connemat/model/config/Instance;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"PUT"
									],
									"params": [],
									"patterns": [
										"/sysmat/instance"
									],
									"produces": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.InstanceController#addInstanceDataSourceConfig(InstanceDataSourceRepresentation)",
							"predicate": "{POST /sysmat/instance/instance_data_source, consumes [application/json], produces [application/json]}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.InstanceController",
									"name": "addInstanceDataSourceConfig",
									"descriptor": "(Lbr/com/connemat/rest/model/InstanceDataSourceRepresentation;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat/instance/instance_data_source"
									],
									"produces": [
										{
											"mediaType": "application/json",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SectorController#addSector(Sector)",
							"predicate": "{POST /sysmat/sector}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SectorController",
									"name": "addSector",
									"descriptor": "(Lbr/com/connemat/model/config/Sector;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat/sector"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SectorController#getSectors()",
							"predicate": "{GET /sysmat/sector}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SectorController",
									"name": "getSectors",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/sysmat/sector"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SectorController#addInstance(SectorInstanceRepresentation)",
							"predicate": "{POST /sysmat/sector/instance}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SectorController",
									"name": "addInstance",
									"descriptor": "(Lbr/com/connemat/sysmat/controller/config/representation/SectorInstanceRepresentation;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat/sector/instance"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SectorController#updateSector(Sector)",
							"predicate": "{PUT /sysmat/sector}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SectorController",
									"name": "updateSector",
									"descriptor": "(Lbr/com/connemat/model/config/Sector;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"PUT"
									],
									"params": [],
									"patterns": [
										"/sysmat/sector"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SectorController#deleteSector(Sector)",
							"predicate": "{DELETE /sysmat/sector}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SectorController",
									"name": "deleteSector",
									"descriptor": "(Lbr/com/connemat/model/config/Sector;)V"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/sysmat/sector"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SystemConfigController#getSystemConfig(Long)",
							"predicate": "{GET /sysmat/system_config/{id}}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SystemConfigController",
									"name": "getSystemConfig",
									"descriptor": "(Ljava/lang/Long;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/sysmat/system_config/{id}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SystemConfigController#getSystemConfig()",
							"predicate": "{GET /sysmat/system_config}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SystemConfigController",
									"name": "getSystemConfig",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/sysmat/system_config"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SystemConfigController#addSystemConfig(SystemConfig)",
							"predicate": "{POST /sysmat/system_config}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SystemConfigController",
									"name": "addSystemConfig",
									"descriptor": "(Lbr/com/connemat/model/config/SystemConfig;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/sysmat/system_config"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SystemConfigController#updateSystemConfig(SystemConfig)",
							"predicate": "{PUT /sysmat/system_config}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SystemConfigController",
									"name": "updateSystemConfig",
									"descriptor": "(Lbr/com/connemat/model/config/SystemConfig;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"PUT"
									],
									"params": [],
									"patterns": [
										"/sysmat/system_config"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "br.com.connemat.controller.config.SystemConfigController#deleteSystemConfig(SystemConfig)",
							"predicate": "{DELETE /sysmat/system_config}",
							"details": {
								"handlerMethod": {
									"className": "br.com.connemat.controller.config.SystemConfigController",
									"name": "deleteSystemConfig",
									"descriptor": "(Lbr/com/connemat/model/config/SystemConfig;)V"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/sysmat/system_config"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.ClientEntityController#getClientEntities(String)",
							"predicate": "{GET /client_entity/{realm}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.ClientEntityController",
									"name": "getClientEntities",
									"descriptor": "(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/client_entity/{realm}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.ClientEntityController#getClientEntities()",
							"predicate": "{GET /client_entity/}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.ClientEntityController",
									"name": "getClientEntities",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/client_entity/"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.ClientEntityController#getClientEntitiesByIdAndRealm(String, String)",
							"predicate": "{GET /client_entity/{realm}/{id}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.ClientEntityController",
									"name": "getClientEntitiesByIdAndRealm",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/client_entity/{realm}/{id}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.GroupEntityController#getGroupsByRealm(String)",
							"predicate": "{GET /group_entity/{realm}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.GroupEntityController",
									"name": "getGroupsByRealm",
									"descriptor": "(Ljava/lang/String;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/group_entity/{realm}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.GroupEntityController#getGroupsByAttributeAndRealm(String, String)",
							"predicate": "{GET /group_entity/{attribute}/{realm}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.GroupEntityController",
									"name": "getGroupsByAttributeAndRealm",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/group_entity/{attribute}/{realm}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.ResourceEntityController#findAll()",
							"predicate": "{GET /resource_entity}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.ResourceEntityController",
									"name": "findAll",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/resource_entity"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.RoleEntityController#getSysmatActionRoles()",
							"predicate": "{GET /role_entity}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.RoleEntityController",
									"name": "getSysmatActionRoles",
									"descriptor": "()Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/role_entity"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getUserById(String)",
							"predicate": "{GET /user_entity/{id}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getUserById",
									"descriptor": "(Ljava/lang/String;)Ljava/util/Optional;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/{id}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getUserGroups(String)",
							"predicate": "{GET /user_entity/{id}/groups}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getUserGroups",
									"descriptor": "(Ljava/lang/String;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/{id}/groups"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getByNameOrEmailAndRealmId(String, String)",
							"predicate": "{GET /user_entity/data/{id}/{realmId}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getByNameOrEmailAndRealmId",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/data/{id}/{realmId}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getByEmailAndRealmId(String, String)",
							"predicate": "{GET /user_entity/email/{email}/{realmId}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getByEmailAndRealmId",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/email/{email}/{realmId}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getByUsernameAndRealmId(String, String)",
							"predicate": "{GET /user_entity/username/{username}/{realmId}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getByUsernameAndRealmId",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/username/{username}/{realmId}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.UserEntityController#getUserWorkspaces(String, String)",
							"predicate": "{GET /user_entity/{realmId}/{userId}/workspaces}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.UserEntityController",
									"name": "getUserWorkspaces",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/user_entity/{realmId}/{userId}/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#putWorkspaces()",
							"predicate": "{PUT /workspaces}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "putWorkspaces",
									"descriptor": "()Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"PUT"
									],
									"params": [],
									"patterns": [
										"/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#delWorkspaces()",
							"predicate": "{DELETE /workspaces}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "delWorkspaces",
									"descriptor": "()Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"DELETE"
									],
									"params": [],
									"patterns": [
										"/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#getWorkspaces()",
							"predicate": "{GET /workspaces}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "getWorkspaces",
									"descriptor": "()Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#postWorkspaces()",
							"predicate": "{POST /workspaces}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "postWorkspaces",
									"descriptor": "()Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"POST"
									],
									"params": [],
									"patterns": [
										"/workspaces"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#getRealmWorkspaces(String)",
							"predicate": "{GET /workspaces/{realmId}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "getRealmWorkspaces",
									"descriptor": "(Ljava/lang/String;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/workspaces/{realmId}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.keycloak.models.controller.WorkspaceController#getRealmUserWorkspaces(String, String, Authentication)",
							"predicate": "{GET /workspaces/{realmId}/{userId}}",
							"details": {
								"handlerMethod": {
									"className": "org.keycloak.models.controller.WorkspaceController",
									"name": "getRealmUserWorkspaces",
									"descriptor": "(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/security/core/Authentication;)Ljava/util/List;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [
										"GET"
									],
									"params": [],
									"patterns": [
										"/workspaces/{realmId}/{userId}"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)",
							"predicate": "{ /error}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
									"name": "error",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [],
									"params": [],
									"patterns": [
										"/error"
									],
									"produces": []
								}
							}
						},
						{
							"handler": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)",
							"predicate": "{ /error, produces [text/html]}",
							"details": {
								"handlerMethod": {
									"className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
									"name": "errorHtml",
									"descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;"
								},
								"requestMappingConditions": {
									"consumes": [],
									"headers": [],
									"methods": [],
									"params": [],
									"patterns": [
										"/error"
									],
									"produces": [
										{
											"mediaType": "text/html",
											"negated": false
										}
									]
								}
							}
						},
						{
							"handler": "ResourceHttpRequestHandler [\"classpath:/META-INF/resources/webjars/\"]",
							"predicate": "/webjars/**",
							"details": null
						},
						{
							"handler": "ResourceHttpRequestHandler [\"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\", \"/\"]",
							"predicate": "/**",
							"details": null
						}
					]
				},
				"servletFilters": [
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "webMvcMetricsFilter",
						"className": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "requestContextFilter",
						"className": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "Tomcat WebSocket (JSR356) Filter",
						"className": "org.apache.tomcat.websocket.server.WsFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "keycloakSecurityContextRequestFilter",
						"className": "org.keycloak.adapters.springsecurity.filter.KeycloakSecurityContextRequestFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "characterEncodingFilter",
						"className": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "springSecurityFilterChain",
						"className": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "formContentFilter",
						"className": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter"
					},
					{
						"servletNameMappings": [],
						"urlPatternMappings": [
							"/*"
						],
						"name": "keycloakAuthenticatedActionsRequestFilter",
						"className": "org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticatedActionsFilter"
					}
				],
				"servlets": [
					{
						"mappings": [],
						"name": "default",
						"className": "org.apache.catalina.servlets.DefaultServlet"
					},
					{
						"mappings": [
							"/"
						],
						"name": "dispatcherServlet",
						"className": "org.springframework.web.servlet.DispatcherServlet"
					},
					{
						"mappings": [
							"/services/*"
						],
						"name": "messageDispatcherServlet",
						"className": "org.springframework.ws.transport.http.MessageDispatcherServlet"
					}
				]
			},
			"parentId": null
		}
	}
}